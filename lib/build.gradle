plugins {
    id 'java-library'
    id 'jacoco' // Adds jacocoTestReport task for coverage.
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
    maven {
        url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        mavenContent {
            snapshotsOnly()
        }
    }
}

dependencies {
    testImplementation(platform('org.junit:junit-bom:5.13.3'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')

    testImplementation('org.apache.logging.log4j:log4j-slf4j-impl:2.24.3')
    testImplementation('fi.protonode:certy:0.4.1')

    // Following warning is printed with JDK17
    //   "OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended"
    // https://github.com/mockito/mockito/issues/2590
    //
    // For JDK8 compatibility, mockito must stay in version 4.x.
    testImplementation('org.mockito:mockito-inline:4.11.0')

    implementation('org.slf4j:slf4j-api:2.0.17')
}

java {
    withJavadocJar()
    withSourcesJar()
}

// Compatibility with JDK8.
compileJava {
    if (JavaVersion.current() > JavaVersion.VERSION_1_8) {
        options.release = 8
    } else {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

tasks.named('test') {
    useJUnitPlatform()
    testLogging {
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'fi.protonode'
            artifactId = 'reloading-keystore'

            from components.java

            pom {
                name = 'certy'
                description = 'KeyStore with certificate hot-reload and PEM file support.'
                url = 'https://github.com/tsaarni/reloading-keystore'
                developers {
                    developer {
                        id = 'tsaarni'
                        name = 'Tero Saarni'
                        email = 'tero.saarni@gmail.com'
                        organizationUrl = 'https://github.com/tsaarni/'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com:tsaarni/reloading-keystore.git'
                    developerConnection = 'scm:git:ssh://github.com:tsaarni/reloading-keystore.git'
                    url = 'https://github.com/tsaarni/reloading-keystore'
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.hasProperty('ossrhUsername') ? ossrhUsername : 'undefined'
                password = project.hasProperty('ossrhPassword') ? ossrhPassword : 'undefined'
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.maven
}
